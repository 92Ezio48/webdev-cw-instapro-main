import { _id } from "../api.js";
import {
  getUserFromLocalStorage,
  removeUserFromLocalStorage,
  saveUserToLocalStorage,
} from "../helpers.js";
import { postImage } from "../api.js";
import { renderHeaderComponent } from "./header-component.js";
import { renderPostsPageComponent } from "./posts-page-component.js";
let uploadedImageUrl = "";
export function renderAddPostPageComponent({ appEl, onAddPostClick, token }) {
  let selectedFile = null;
  let uploadedImageUrl = "";

  const render = () => {
    const appHtml = `
      <div class="page-container">
        <div class="header-container"></div>
        <h2>–°—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ—Å—Ç–∞</h2>
        <div class="form-container">
          <input type="text" class="add-form-name" placeholder="–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏" />
          <input type="file" id="image-input" />
        </div>
        <button class="button" id="add-button">–î–æ–±–∞–≤–∏—Ç—å</button>
      </div>
    `;

    appEl.innerHTML = appHtml;

    renderHeaderComponent({
      element: document.querySelector(".header-container"),
      user: getUserFromLocalStorage(),
    });

    const fileInputElement = document.getElementById("image-input");
    fileInputElement.addEventListener("change", async function () {
      selectedFile = this.files[0];
      if (selectedFile) {
        try {
          uploadedImageUrl = await postImage({ file: selectedFile });
        } catch (error) {
          alert("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è");
          console.error(error);
        }
      }
    });

    document
      .getElementById("add-button")
      .addEventListener("click", async () => {
        const descriptionInput = document.querySelector(".add-form-name");
        const description = descriptionInput.value.trim();

        if (!description || !selectedFile) {
          alert("–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª.");
          return;
        }

        try {
          // üëâ –î–æ–∂–¥–∏—Å—å –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ—Å—Ç–∞
          await onAddPostClick({
            description,
            imageFile: selectedFile,
          });

          // üëâ –¢–æ–ª—å–∫–æ –ø–æ—Ç–æ–º –æ–±–Ω–æ–≤–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ—Å—Ç–æ–≤
          await renderPostsPageComponent({ appEl, token });
        } catch (error) {
          alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ—Å—Ç–∞");
          console.error(error);
        }
      });
  };

  render();
}
